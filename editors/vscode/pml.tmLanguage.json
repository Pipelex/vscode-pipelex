{
  "version": "1.0.0",
  "scopeName": "source.pml",
  "uuid": "8b4e5008-c50d-11ea-a91b-54ee75aeeb97",
  "information_for_contributors": [
    "Originally was maintained by aster (galaster@foxmail.com). This notice is only kept here for the record, please don't send e-mails about bugs and other issues."
  ],
  "patterns": [
    {
      "include": "#commentDirective"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#dataInjection"
    },
    {
      "include": "#templateVariable"
    },
    {
      "include": "#jinjaDelimiters"
    },
    {
      "include": "#jinjaKeywords"
    },
    {
      "include": "#jinjaVariable"
    },
    {
      "include": "#htmlTag"
    },
    {
      "include": "#htmlComment"
    },
    {
      "include": "#table"
    },
    {
      "include": "#entryBegin"
    },
    {
      "include": "#value"
    }
  ],
  "repository": {
    "comment": {
      "captures": {
        "1": {
          "name": "comment.line.number-sign.pml"
        },
        "2": {
          "name": "punctuation.definition.comment.pml"
        }
      },
      "comment": "Comments",
      "match": "\\s*((#).*)$"
    },
    "commentDirective": {
      "captures": {
        "1": {
          "name": "meta.preprocessor.pml"
        },
        "2": {
          "name": "punctuation.definition.meta.preprocessor.pml"
        }
      },
      "comment": "Comments",
      "match": "\\s*((#):.*)$"
    },
    "table": {
      "patterns": [
        {
          "name": "meta.table.concept.pml",
          "match": "^\\s*(\\[)\\s*(concept(?:\\.(?:[A-Za-z][A-Za-z0-9]*|\"[^\"]+\"|'[^']+'))?)\\s*(\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.table.pml"
            },
            "2": {
              "patterns": [
                {
                  "match": "concept",
                  "name": "support.type.property-name.concept.pml"
                },
                {
                  "match": "\\.",
                  "name": "punctuation.separator.dot.pml"
                },
                {
                  "match": "(?:[A-Za-z][A-Za-z0-9]*)|(?:\"[^\"]+\")|(?:'[^']+')",
                  "name": "support.type.property-name.concept.pml"
                }
              ]
            },
            "3": {
              "name": "punctuation.definition.table.pml"
            }
          }
        },
        {
          "name": "meta.table.pipe.pml",
          "match": "^\\s*(\\[)\\s*(pipe(?:\\.(?:[A-Za-z0-9_+-]+|\"[^\"]+\"|'[^']+'))?)\\s*(\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.table.pml"
            },
            "2": {
              "patterns": [
                {
                  "match": "pipe",
                  "name": "support.type.property-name.pipe.pml"
                },
                {
                  "match": "\\.",
                  "name": "punctuation.separator.dot.pml"
                },
                {
                  "match": "(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+')",
                  "name": "support.type.property-name.pipe.pml"
                }
              ]
            },
            "3": {
              "name": "punctuation.definition.table.pml"
            }
          }
        },
        {
          "name": "meta.table.pml",
          "match": "^\\s*(\\[)\\s*((?:(?:(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+'))\\s*\\.?\\s*)+)\\s*(\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.table.pml"
            },
            "2": {
              "patterns": [
                {
                  "match": "(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+')",
                  "name": "support.type.property-name.table.pml"
                },
                {
                  "match": "\\.",
                  "name": "punctuation.separator.dot.pml"
                }
              ]
            },
            "3": {
              "name": "punctuation.definition.table.pml"
            }
          }
        },
        {
          "name": "meta.array.table.pml",
          "match": "^\\s*(\\[\\[)\\s*((?:(?:(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+'))\\s*\\.?\\s*)+)\\s*(\\]\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.array.table.pml"
            },
            "2": {
              "patterns": [
                {
                  "match": "(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+')",
                  "name": "support.type.property-name.array.pml"
                },
                {
                  "match": "\\.",
                  "name": "punctuation.separator.dot.pml"
                }
              ]
            },
            "3": {
              "name": "punctuation.definition.array.table.pml"
            }
          }
        },
        {
          "begin": "(\\{)",
          "end": "(\\})",
          "name": "meta.table.inline.pml",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.table.inline.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.table.inline.pml"
            }
          },
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "match": ",",
              "name": "punctuation.separator.table.inline.pml"
            },
            {
              "include": "#entryBegin"
            },
            {
              "include": "#value"
            }
          ]
        }
      ]
    },
    "entryBegin": {
      "patterns": [
        {
          "name": "meta.entry.pipe.pml",
          "match": "^\\s*(pipe(?:\\.(?:[A-Za-z0-9_+-]+|\"[^\"]+\"|'[^']+'))?)\\s*(=)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "match": "pipe",
                  "name": "support.type.property-name.pipe.pml"
                },
                {
                  "match": "\\.",
                  "name": "punctuation.separator.dot.pml"
                },
                {
                  "match": "(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+')",
                  "name": "support.type.property-name.pipe.pml"
                }
              ]
            },
            "2": {
              "name": "punctuation.eq.pml"
            }
          }
        },
        {
          "name": "meta.entry.output-type.pml",
          "match": "\\s*(output)\\s*(=)\\s*(\")((?:[a-z][a-z0-9_]*\\.)?[A-Za-z][A-Za-z0-9]*(?:\\.[A-Za-z][A-Za-z0-9]*)*)(\")",
          "captures": {
            "1": {
              "name": "support.type.property-name.pml"
            },
            "2": {
              "name": "punctuation.eq.pml"
            },
            "3": {
              "name": "punctuation.definition.string.begin.pml"
            },
            "4": {
              "name": "support.type.concept.pml"
            },
            "5": {
              "name": "punctuation.definition.string.end.pml"
            }
          }
        },
        {
          "name": "meta.entry.refines-type.pml",
          "match": "\\s*(refines)\\s*(=)\\s*(\")((?:[a-z][a-z0-9_]*\\.)?[A-Za-z][A-Za-z0-9]*(?:\\.[A-Za-z][A-Za-z0-9]*)*)(\")",
          "captures": {
            "1": {
              "name": "support.type.property-name.pml"
            },
            "2": {
              "name": "punctuation.eq.pml"
            },
            "3": {
              "name": "punctuation.definition.string.begin.pml"
            },
            "4": {
              "name": "support.type.concept.pml"
            },
            "5": {
              "name": "punctuation.definition.string.end.pml"
            }
          }
        },
        {
          "name": "meta.entry.jinja2-template.pml",
          "begin": "\\s*(jinja2)\\s*(=)\\s*(\"\"\")",
          "end": "(\"\"\")",
          "beginCaptures": {
            "1": {
              "name": "support.type.property-name.pml"
            },
            "2": {
              "name": "punctuation.eq.pml"
            },
            "3": {
              "name": "punctuation.definition.string.begin.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.pml"
            }
          },
          "contentName": "string.quoted.triple.basic.block.jinja2.pml",
          "patterns": [
            {
              "include": "#jinjaTemplateContent"
            },
            {
              "include": "#htmlContent"
            },
            {
              "include": "#stringEscapes"
            },
            {
              "include": "#dataInjectionInString"
            },
            {
              "include": "#templateVariableInString"
            }
          ]
        },
        {
          "name": "meta.entry.prompt-template.pml",
          "begin": "\\s*(prompt_template)\\s*(=)\\s*(\"\"\")",
          "end": "(\"\"\")",
          "beginCaptures": {
            "1": {
              "name": "support.type.property-name.pml"
            },
            "2": {
              "name": "punctuation.eq.pml"
            },
            "3": {
              "name": "punctuation.definition.string.begin.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.pml"
            }
          },
          "contentName": "string.quoted.triple.basic.block.prompt.pml",
          "patterns": [
            {
              "include": "#jinjaTemplateContent"
            },
            {
              "include": "#stringEscapes"
            },
            {
              "include": "#dataInjectionInString"
            },
            {
              "include": "#templateVariableInString"
            }
          ]
        },
        {
          "name": "meta.entry.jinja2-template-line.pml",
          "begin": "\\s*(jinja2)\\s*(=)\\s*(\")",
          "end": "(\")",
          "beginCaptures": {
            "1": {
              "name": "support.type.property-name.pml"
            },
            "2": {
              "name": "punctuation.eq.pml"
            },
            "3": {
              "name": "punctuation.definition.string.begin.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.pml"
            }
          },
          "contentName": "string.quoted.single.basic.line.jinja2.pml",
          "patterns": [
            {
              "include": "#jinjaTemplateContent"
            },
            {
              "include": "#htmlContent"
            },
            {
              "include": "#stringEscapes"
            },
            {
              "include": "#dataInjectionInString"
            },
            {
              "include": "#templateVariableInString"
            }
          ]
        },
        {
          "name": "meta.entry.prompt-template-line.pml",
          "begin": "\\s*(prompt_template)\\s*(=)\\s*(\")",
          "end": "(\")",
          "beginCaptures": {
            "1": {
              "name": "support.type.property-name.pml"
            },
            "2": {
              "name": "punctuation.eq.pml"
            },
            "3": {
              "name": "punctuation.definition.string.begin.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.pml"
            }
          },
          "contentName": "string.quoted.single.basic.line.prompt.pml",
          "patterns": [
            {
              "include": "#jinjaTemplateContent"
            },
            {
              "include": "#stringEscapes"
            },
            {
              "include": "#dataInjectionInString"
            },
            {
              "include": "#templateVariableInString"
            }
          ]
        },
        {
          "name": "meta.entry.pml",
          "match": "\\s*((?:(?:(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+'))\\s*\\.?\\s*)+)\\s*(=)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "match": "(?:[A-Za-z0-9_+-]+)|(?:\"[^\"]+\")|(?:'[^']+')",
                  "name": "support.type.property-name.pml"
                },
                {
                  "match": "\\.",
                  "name": "punctuation.separator.dot.pml"
                }
              ]
            },
            "2": {
              "name": "punctuation.eq.pml"
            }
          }
        }
      ]
    },
    "value": {
      "patterns": [
        {
          "match": "(@)([a-z][a-zA-Z0-9_]*(?:\\.[a-z][a-zA-Z0-9_]*)*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.data-injection.pml"
            },
            "2": {
              "name": "variable.name.data.pml"
            }
          }
        },
        {
          "match": "(\\$)([a-z][a-zA-Z0-9_]*(?:\\.[a-z][a-zA-Z0-9_]*)*)",
          "captures": {
            "1": {
              "name": "punctuation.definition.template-variable.pml"
            },
            "2": {
              "name": "variable.name.data.pml"
            }
          }
        },
        {
          "match": "(\\{\\{|\\}\\}|\\{%|%\\})",
          "name": "punctuation.definition.jinja.pml"
        },
        {
          "match": "\\b(if|endif|else|elif|for|endfor|set|block|endblock|macro|endmacro|call|endcall|filter|endfilter|with|endwith|autoescape|endautoescape|raw|endraw)\\b",
          "name": "keyword.control.jinja.pml"
        },
        {
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*)\\b",
          "name": "variable.other.jinja.pml"
        },
        {
          "match": "(</?)(\\w+)([^>]*)(>)",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.html.pml"
            },
            "2": {
              "name": "entity.name.tag.html.pml"
            },
            "3": {
              "patterns": [
                {
                  "match": "(\\w+)(=)(\"[^\"]*\"|'[^']*')",
                  "captures": {
                    "1": {
                      "name": "entity.other.attribute-name.html.pml"
                    },
                    "2": {
                      "name": "punctuation.separator.key-value.html.pml"
                    },
                    "3": {
                      "name": "string.quoted.html.pml"
                    }
                  }
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.tag.html.pml"
            }
          }
        },
        {
          "match": "(<!--)(.*?)(-->)",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.html.pml"
            },
            "2": {
              "name": "comment.block.html.pml"
            },
            "3": {
              "name": "punctuation.definition.comment.html.pml"
            }
          }
        },
        {
          "name": "string.quoted.triple.basic.block.pml",
          "begin": "\"\"\"",
          "end": "\"\"\"",
          "patterns": [
            {
              "include": "#jinjaTemplateContent"
            },
            {
              "include": "#htmlContent"
            },
            {
              "include": "#stringEscapes"
            },
            {
              "include": "#dataInjectionInString"
            },
            {
              "include": "#templateVariableInString"
            }
          ]
        },
        {
          "name": "string.quoted.single.basic.line.pml",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "include": "#jinjaTemplateContent"
            },
            {
              "include": "#htmlContent"
            },
            {
              "include": "#stringEscapes"
            },
            {
              "include": "#dataInjectionInString"
            },
            {
              "include": "#templateVariableInString"
            }
          ]
        },
        {
          "name": "string.quoted.triple.literal.block.pml",
          "begin": "'''",
          "end": "'''"
        },
        {
          "name": "string.quoted.single.literal.line.pml",
          "begin": "'",
          "end": "'"
        },
        {
          "captures": {
            "1": {
              "name": "constant.other.time.datetime.offset.pml"
            }
          },
          "match": "(?<!\\w)(\\d{4}\\-\\d{2}\\-\\d{2}[T| ]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[\\+\\-]\\d{2}:\\d{2}))(?!\\w)"
        },
        {
          "captures": {
            "1": {
              "name": "constant.other.time.datetime.local.pml"
            }
          },
          "match": "(\\d{4}\\-\\d{2}\\-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?)"
        },
        {
          "name": "constant.other.time.date.pml",
          "match": "\\d{4}\\-\\d{2}\\-\\d{2}"
        },
        {
          "name": "constant.other.time.time.pml",
          "match": "\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?"
        },
        {
          "match": "(?<!\\w)(true|false)(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.language.boolean.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)([\\+\\-]?(0|([1-9](([0-9]|_[0-9])+)?))(?:(?:\\.([0-9]+))?[eE][\\+\\-]?[1-9]_?[0-9]*|(?:\\.[0-9_]*)))(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.float.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)((?:[\\+\\-]?(0|([1-9](([0-9]|_[0-9])+)?))))(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.integer.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)([\\+\\-]?inf)(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.inf.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)([\\+\\-]?nan)(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.nan.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)((?:0x(([0-9a-fA-F](([0-9a-fA-F]|_[0-9a-fA-F])+)?))))(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.hex.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)(0o[0-7](_?[0-7])*)(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.oct.pml"
            }
          }
        },
        {
          "match": "(?<!\\w)(0b[01](_?[01])*)(?!\\w)",
          "captures": {
            "1": {
              "name": "constant.numeric.bin.pml"
            }
          }
        },
        {
          "name": "meta.array.pml",
          "begin": "(?<!\\w)(\\[)\\s*",
          "end": "\\s*(\\])(?!\\w)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.array.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.array.pml"
            }
          },
          "patterns": [
            {
              "match": ",",
              "name": "punctuation.separator.array.pml"
            },
            {
              "include": "#comment"
            },
            {
              "include": "#value"
            }
          ]
        },
        {
          "begin": "(\\{)",
          "end": "(\\})",
          "name": "meta.table.inline.pml",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.table.inline.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.table.inline.pml"
            }
          },
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "match": ",",
              "name": "punctuation.separator.table.inline.pml"
            },
            {
              "include": "#entryBegin"
            },
            {
              "include": "#value"
            }
          ]
        }
      ]
    },
    "dataInjection": {
      "match": "(@)([a-z][a-zA-Z0-9_]*(?:\\.[a-z][a-zA-Z0-9_]*)*)",
      "captures": {
        "1": {
          "name": "punctuation.definition.data-injection.pml"
        },
        "2": {
          "name": "variable.name.data.pml"
        }
      }
    },
    "templateVariable": {
      "match": "(\\$)([a-z][a-zA-Z0-9_]*(?:\\.[a-z][a-zA-Z0-9_]*)*)",
      "captures": {
        "1": {
          "name": "punctuation.definition.template-variable.pml"
        },
        "2": {
          "name": "variable.name.data.pml"
        }
      }
    },
    "jinjaDelimiters": {
      "match": "(\\{\\{|\\}\\}|\\{%|%\\})",
      "name": "punctuation.definition.jinja.pml"
    },
    "jinjaKeywords": {
      "match": "\\b(if|endif|else|elif|for|endfor|set|block|endblock|macro|endmacro|call|endcall|filter|endfilter|with|endwith|autoescape|endautoescape|raw|endraw)\\b",
      "name": "keyword.control.jinja.pml"
    },
    "jinjaVariable": {
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*)\\b",
      "name": "variable.other.jinja.pml"
    },
    "htmlTag": {
      "match": "(</?)(\\w+)([^>]*)(>)",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.html.pml"
        },
        "2": {
          "name": "entity.name.tag.html.pml"
        },
        "3": {
          "patterns": [
            {
              "match": "(\\w+)(=)(\"[^\"]*\"|'[^']*')",
              "captures": {
                "1": {
                  "name": "entity.other.attribute-name.html.pml"
                },
                "2": {
                  "name": "punctuation.separator.key-value.html.pml"
                },
                "3": {
                  "name": "string.quoted.html.pml"
                }
              }
            }
          ]
        },
        "4": {
          "name": "punctuation.definition.tag.html.pml"
        }
      }
    },
    "htmlComment": {
      "match": "(<!--)(.*?)(-->)",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.html.pml"
        },
        "2": {
          "name": "comment.block.html.pml"
        },
        "3": {
          "name": "punctuation.definition.comment.html.pml"
        }
      }
    },
    "jinjaTemplateContent": {
      "patterns": [
        {
          "name": "meta.embedded.block.jinja.pml",
          "begin": "(\\{%)",
          "end": "(%\\})",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.jinja.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.jinja.pml"
            }
          },
          "patterns": [
            {
              "include": "#jinjaStatements"
            }
          ]
        },
        {
          "name": "meta.embedded.expression.jinja.pml",
          "begin": "(\\{\\{)",
          "end": "(\\}\\})",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.jinja.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.jinja.pml"
            }
          },
          "patterns": [
            {
              "include": "#jinjaExpressions"
            }
          ]
        },
        {
          "name": "comment.block.jinja.pml",
          "begin": "(\\{#)",
          "end": "(#\\})",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.begin.jinja.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.comment.end.jinja.pml"
            }
          }
        }
      ]
    },
    "jinjaStatements": {
      "patterns": [
        {
          "match": "\\b(if|elif|else|endif|for|endfor|set|with|endwith|block|endblock|macro|endmacro|call|endcall|filter|endfilter|autoescape|endautoescape|raw|endraw|extends|include|import|from)\\b",
          "name": "keyword.control.jinja.pml"
        },
        {
          "match": "\\b(and|or|not|in|is|true|false|none)\\b",
          "name": "keyword.operator.jinja.pml"
        },
        {
          "match": "\\b(selectattr|rejectattr|map|select|reject|join|list|sort|reverse|length|first|last|random|min|max|sum|abs|round|int|float|string)\\b",
          "name": "support.function.jinja.pml"
        },
        {
          "match": "[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.jinja.pml"
        },
        {
          "match": "\\.",
          "name": "punctuation.accessor.jinja.pml"
        },
        {
          "match": "\\|",
          "name": "punctuation.separator.filter.jinja.pml"
        }
      ]
    },
    "jinjaExpressions": {
      "patterns": [
        {
          "match": "\\b(and|or|not|in|is|true|false|none)\\b",
          "name": "keyword.operator.jinja.pml"
        },
        {
          "match": "\\b(selectattr|rejectattr|map|select|reject|join|list|sort|reverse|length|first|last|random|min|max|sum|abs|round|int|float|string|equalto)\\b",
          "name": "support.function.jinja.pml"
        },
        {
          "match": "[a-zA-Z_][a-zA-Z0-9_]*",
          "name": "variable.other.jinja.pml"
        },
        {
          "match": "\\.",
          "name": "punctuation.accessor.jinja.pml"
        },
        {
          "match": "\\|",
          "name": "punctuation.separator.filter.jinja.pml"
        },
        {
          "match": "\"[^\"]*\"",
          "name": "string.quoted.double.jinja.pml"
        },
        {
          "match": "'[^']*'",
          "name": "string.quoted.single.jinja.pml"
        },
        {
          "match": "\\d+",
          "name": "constant.numeric.jinja.pml"
        }
      ]
    },
    "htmlContent": {
      "patterns": [
        {
          "name": "meta.tag.html.pml",
          "begin": "(<)([a-zA-Z][a-zA-Z0-9]*)",
          "end": "(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html.pml"
            },
            "2": {
              "name": "entity.name.tag.html.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html.pml"
            }
          },
          "patterns": [
            {
              "include": "#htmlAttributes"
            }
          ]
        },
        {
          "name": "meta.tag.html.pml",
          "begin": "(</)([a-zA-Z][a-zA-Z0-9]*)",
          "end": "(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html.pml"
            },
            "2": {
              "name": "entity.name.tag.html.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html.pml"
            }
          }
        },
        {
          "name": "comment.block.html.pml",
          "begin": "(<!--)",
          "end": "(-->)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.begin.html.pml"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.comment.end.html.pml"
            }
          }
        }
      ]
    },
    "htmlAttributes": {
      "patterns": [
        {
          "match": "([a-zA-Z-]+)(=)(\"[^\"]*\"|'[^']*')",
          "captures": {
            "1": {
              "name": "entity.other.attribute-name.html.pml"
            },
            "2": {
              "name": "punctuation.separator.key-value.html.pml"
            },
            "3": {
              "name": "string.quoted.html.pml"
            }
          }
        },
        {
          "match": "[a-zA-Z-]+",
          "name": "entity.other.attribute-name.html.pml"
        }
      ]
    },
    "stringEscapes": {
      "patterns": [
        {
          "match": "\\\\([btnfr\"\\\\\\n/ ]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})",
          "name": "constant.character.escape.pml"
        },
        {
          "match": "\\\\[^btnfr/\"\\\\\\n]",
          "name": "invalid.illegal.escape.pml"
        }
      ]
    },
    "dataInjectionInString": {
      "match": "(@)([a-z][a-zA-Z0-9_]*(?:\\.[a-z][a-zA-Z0-9_]*)*)",
      "captures": {
        "1": {
          "name": "punctuation.definition.data-injection.pml"
        },
        "2": {
          "name": "variable.name.data.pml"
        }
      }
    },
    "templateVariableInString": {
      "match": "(\\$)([a-z][a-zA-Z0-9_]*(?:\\.[a-z][a-zA-Z0-9_]*)*)",
      "captures": {
        "1": {
          "name": "punctuation.definition.template-variable.pml"
        },
        "2": {
          "name": "variable.name.data.pml"
        }
      }
    }
  }
}